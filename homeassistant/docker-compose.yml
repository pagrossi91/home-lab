version: '3.7'

services:
  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant:stable
    hostname: homeassistant-docker
    volumes:
      - ./config:/config
    environment:
      PUID: ${LOCAL_USER}
      PGID: ${LOCAL_USER}
      TZ: ${TZ}
      DB_URL: ${DB_URL}
    restart: unless-stopped
    network_mode: host
    devices:
      - /dev/ttyUSB0:/zwaveusbstick
      - /dev/ttyUSB1:/zigbeeusbstick
    depends_on:
      - zwavejs2mqtt
      - mariadb
    labels:
      - "com.centurylinklabs.watchtower.enable=false" # excludes container from watchtower update

  mariadb:
    container_name: mariadb
    image: linuxserver/mariadb:latest
    hostname: mariadb-docker
    restart: unless-stopped
    environment:
      PUID: ${LOCAL_USER}
      PGID: ${LOCAL_USER}
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${HA_MYSQL_PASSWORD}
    volumes:
      - ./mariadb:/config # Local path where the database will be stored.
    ports:
      - 3306:3306
    labels:
      - "com.centurylinklabs.watchtower.enable=false" # excludes container from watchtower update

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    volumes:
      - ./influxdb:/var/lib/influxdb
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
    # command: -config /etc/influxdb/influxdb.conf
    restart: always
    # network_mode: host
    ports:
      - 8086:8086
      - 8083:8083 
    labels:
      - "com.centurylinklabs.watchtower.enable=false" # excludes container from watchtower update

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    # command: --config /etc/grafana/grafana.ini
    restart: always
    # network_mode: host
    ports:
      - 3000:3000
    depends_on:
      - influxdb
    labels:
      - "com.centurylinklabs.watchtower.enable=false" # excludes container from watchtower update

  # speedtest:
  #   image: atribe/speedtest-for-influxdb-and-grafana:latest
  #   container_name: speedtest
  #   network_mode: host
  #   volumes:
  #     - ./speedtest/config.ini:/src/config.ini
  #   depends_on:
  #     - influxdb
  #   restart: always

  nodered:
    container_name: nodered
    image: nodered/node-red:latest
    hostname: nodered-docker
    ports:
      - 1880:1880
    volumes:
      - ./node-red:/data # Local path where all Node-RED config will be stored.
    depends_on:
      - homeassistant
    environment:
      TZ: ${TZ}
    user: ${LOCAL_USER}:${LOCAL_USER}
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false" # excludes container from watchtower update

  mosquitto:
    container_name: mosquitto-mqtt
    image: eclipse-mosquitto
    volumes:
      - ./mosquitto:/mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    labels:
      - "com.centurylinklabs.watchtower.enable=false" # excludes container from watchtower update

  amcrest2mqtt:
    container_name: amcrest2mqtt-backyard
    image: dchesterton/amcrest2mqtt:latest
    restart: unless-stopped
    environment:
        AMCREST_HOST: ${amcrest_ip_backyard}
        AMCREST_PASSWORD: ${amcrest_pwd}
        MQTT_HOST: ${SERVER_IP}
        MQTT_USERNAME: ${mosquitto_user}
        MQTT_PASSWORD: ${mosquitto_pwd}
        HOME_ASSISTANT: "true"
    labels:
    - "com.centurylinklabs.watchtower.enable=false" # excludes container from watchtower update

  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    restart: always
    tty: true
    stop_signal: SIGINT
    environment:
      #SESSION_SECRET: mysupersecretkey
      KEY_S0_Legacy: ${zwavejs2mqtt_s0legacykey}
      KEY_S2_Unauthenticated: ${zwavejs2mqtt_s2unauthkey}
      KEY_S2_Authenticated: ${zwavejs2mqtt_s2authkey}
      KEY_S2_AccessControl: ${zwavejs2mqtt_s2accessctrlkey}
      ZWAVEJS_EXTERNAL_CONFIG: /usr/src/app/store/.config-db
      TZ: ${TZ}
    networks:
      - zwave
    devices:
      # Do not use /dev/ttyUSBX serial devices, as those mappings can change over time.
      # Instead, use the /dev/serial/by-id/X serial device for your Z-Wave stick.
      - /dev/serial/by-id/usb-Silicon_Labs_HubZ_Smart_Home_Controller_4150060D-if00-port0:/dev/zwave
    volumes:
      - ./zwave-config:/usr/src/app/store
    ports:
      - 8091:8091 # port for web interface
      - 3001:3001 # port for Z-Wave JS websocket server
    labels:
      - "com.centurylinklabs.watchtower.enable=false" # excludes container from watchtower update

  frigate:
    container_name: frigate
    privileged: true # this may not be necessary for all setups
    restart: unless-stopped
    image: blakeblackshear/frigate:stable #-amd64
    shm_size: 64mb # update for your cameras based on calculation above
    devices:
      - /dev/bus/usb:/dev/bus/usb # passes the USB Coral, needs to be modified for other versions
      # - /dev/apex_0:/dev/apex_0 # passes a PCIe Coral, follow driver instructions here https://coral.ai/docs/m2/get-started/#2a-on-linux
      - /dev/dri/renderD128 # for intel hwaccel, needs to be updated for your hardware
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./frigate/config.yml:/config/config.yml:ro
      - ./frigate/storage:/media/frigate
      # - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
      #   target: /tmp/cache
      #   tmpfs:
      #     size: 1000000000
    ports:
      - 5000:5000
      # - 1935:1935 # RTMP feeds
    environment:
      FRIGATE_RTSP_PASSWORD: ${amcrest_pwd}
      # FRIGATE_MQTT_HOST: ${SERVER_IP}
      # FRIGATE_MQTT_USERNAME: ${mosquitto_user}
      FRIGATE_MQTT_PASSWORD: ${mosquitto_pwd}
      LIBVA_DRIVER_NAME: radeonsi # To enable AMD GPU hardware acceleration
    labels:
      - "com.centurylinklabs.watchtower.enable=false" # excludes container from watchtower update

  # appdaemon:
  #   container_name: appdaemon
  #   image: acockburn/appdaemon:latest
  #   hostname: appdaemon-docker
  #   restart: unless-stopped
  #   environment:
  #     HA_URL: http://${SERVER_IP}:8123
  #     TOKEN: ${HA_APPDAEMON_KEY}
  #     DASH_URL: http://${SERVER_IP}:5050
  #   ports:
  #     - "5050:5050"
  #   volumes:
  #     # Set which local directory will contain all your app daemon configuration
  #     - ./appdaemon:/conf
  #   depends_on:
  #     - homeassistant
  #   user: ${LOCAL_USER}:${LOCAL_USER}

networks:
  zwave:
volumes:
  zwave-config:
    name: zwave-config
